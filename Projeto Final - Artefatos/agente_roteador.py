from agente_semantico import responder_semantico
from agente_analitico import responder_analitico
from langchain_openai import ChatOpenAI
from langchain_core.messages import HumanMessage
from agente_ferramentas import consultar_iva_online
import re

def heuristica_classificacao(pergunta: str) -> str:
    """Fallback simples baseado em palavras-chave."""
    pergunta_lower = pergunta.lower()
    padroes_analiticos = [
        r"m√©dia", r"soma", r"total", r"quantidade", r"valor (?:m√©dio|total)?",
        r"maior.*valor", r"menor.*valor", r"contagem", r"n√∫mero de", r"quanto"
    ]
    for padrao in padroes_analiticos:
        if re.search(padrao, pergunta_lower):
            return "analitica"
    return "semantica"

def agente_roteador(pergunta: str, df, persist_dir: str, openai_api_key: str) -> str:
    try:
        # LLM para classificar a inten√ß√£o
        llm = ChatOpenAI(api_key=openai_api_key, temperature=0)
        prompt = f"""

Voc√™ √© um especialista em classificar perguntas de usu√°rios sobre dados de notas fiscais.
Classifique a pergunta do usu√°rio em uma das quatro categorias abaixo.

**Categorias:**
- "analitica": Envolve c√°lculo, soma, m√©dia, ou agrega√ß√£o sobre os dados carregados.
- "semantica": √â uma pergunta textual ou descritiva sobre os dados carregados.
- "ferramenta_iva": A pergunta √© especificamente sobre o imposto IVA, sua al√≠quota ou o c√°lculo dele.
- "fora_do_escopo": N√£o se encaixa em nenhuma das anteriores.

**Exemplos:**
- Pergunta: "Qual a soma dos valores?" -> Resposta: analitica
- Pergunta: "Fale sobre as notas da empresa 'ACME Corp'" -> Resposta: semantica
- Pergunta: "qual o valor do iva sobre 1500 reais?" -> Resposta: ferramenta_iva
- Pergunta: "Qual a al√≠quota de iva hoje?" -> Resposta: ferramenta_iva
- Pergunta: "Qual a previs√£o do tempo para amanh√£?" -> Resposta: fora_do_escopo

**Pergunta do Usu√°rio:**
"{pergunta}"

**Sua Classifica√ß√£o (retorne apenas uma palavra):**
"""

        resposta = llm([HumanMessage(content=prompt)]).content.strip().lower()
        print(f"üß† Classifica√ß√£o LLM: {resposta}")

    except Exception as e:
        print("‚ö†Ô∏è Falha na LLM, usando heur√≠stica:", e)
        resposta = heuristica_classificacao(pergunta)
        print(f"üß† Classifica√ß√£o heur√≠stica: {resposta}")

    # Decis√£o final
    if resposta == "analitica":
        return responder_analitico(pergunta, df, openai_api_key)

    elif resposta == "ferramenta_iva":
        # Esta parte ainda n√£o est√° no seu c√≥digo original.
        # Estamos adicionando a chamada para a nova ferramenta.
        # Precisaremos passar a chave da API do Google, mas por agora vamos simplificar.
        return consultar_iva_online(pergunta, openai_api_key)

    elif resposta == "semantica":
        return responder_semantico(pergunta, persist_dir, openai_api_key)
    else:
        return "ü§î Desculpe, s√≥ consigo responder perguntas sobre os dados das notas fiscais que foram carregadas. Voc√™ pode perguntar sobre totais, m√©dias ou buscar por produtos e empresas espec√≠ficas."
